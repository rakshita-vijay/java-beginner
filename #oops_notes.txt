structures in OOPs: classes, objects, constructors
features of OOPs: inheritance, encapsulation, polymorphism, composition

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

state: features that describe an object, stored in fields / variables / attributes, defined in class code block (not in method)
behaviour: actions performed by an object, stored in methods

class: blueprint for designing object
class members: instance, static
member can be field / method / dependent element

static member: one copy in memory; value is associated with the object itself;
               accessed by class name, without object;
               can access only static attributes;
               requires 'static' keyword
               static variable ex: static int a = 1;

instance member: each object has a different value stored for this field;
                 accessed by object of class;
                 can access all attributes;
                 does not require keyword (ex: int b = 2;)
                 instance variable ex: int a = 1;
                 calling an instance method: Scanner scan = new Scanner(System.in);

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

classes are grouped into packages

top-level class is not enclosed in another class
class modifiers: public, (none)
                 public: any class in any package can access (unrestricted)
                 none: only classes in same package can access

class member modifiers: public, protected, (none), private
                        public: any class in any package can access (unrestricted)
                        protected: classes in same package and subclasses in other packages can access
                        none: only classes in same package can access
                        private: no other class can access this member

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

encapsulation: bundling of behaviour and attributes on a single object
               hiding fields and methods from public access
